#include <iostream>

void show_all(dicer & d)
{
	if( d.count )
	{
		auto end = d.items + d.count;
		for(auto h= d.items; h != end; ++h)
		{
			std::cout << (*h) << " ";
		}	
	} else {
		std::cout << "empty";
	}
	std::cout << std::endl;
}

int main()
{
	dicer d;
	d.append(4);
	d.append(2);
	show_all(d);
	
	return 0;
}

enum { max_count = 15 };
typedef int T;

class dicer
{
public:
	T items[max_count];
	int count;
	bool result = false;
	// конструктор
	dicer() : count(0) {}
	// добавить один элемент в массив
	bool append(T item)
	{
		// написать проверку на свободное место (max_count и count)
		this->items[this->count] = item;
		this->count += 1;
		result = count <= max_count;
		return result; // если успешно добавили тогда вернёт true // если нет места тогда false
	}
	// очистка
	void clear()
	{}
};
